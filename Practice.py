# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zzEmSCeF16gtZC7yr47y6Ze5TO-o-tgN
"""

import pandas as pd

# Создание пустого DataFrame для хранения объединенных данных
merged_df = pd.DataFrame()

# Список файлов для объединения
files_to_merge = ['1.csv', '2.csv']

# Цикл по файлам для чтения и объединения данных
for file in files_to_merge:
    df = pd.read_csv(file)
    merged_df = merged_df.append(df)

merged_df.to_csv('merged.csv', index=False)

print("CSV файлы успешно объединены в один файл!")

import pandas as pd

# Чтение данных из CSV файла
df = pd.read_csv('merged.csv')

df

pip install airtable-python-wrapper

from airtable import Airtable

base_id = 'appx3BTpqW1UAIzDz'
table_id = 'tblVjlpJRv29HAQi0'
personal_access_token = 'patEPV6wnalYglZx0.b49e81cb57ad7117480f72fe5de815e2ec5814895f38ec5a428a7fa2a937edff'

airtable = Airtable(base_id, table_id, personal_access_token)

records = airtable.get_all()
for record in records:
    print(record)

data = [record['fields'] for record in records]


df = pd.DataFrame(data)


df.to_excel('1_Часть.xlsx', index=False)

from airtable import Airtable

base_id = 'appx3BTpqW1UAIzDz'
table_id = 'tblo2QGkEW51A7S8s'
personal_access_token = 'patEPV6wnalYglZx0.b49e81cb57ad7117480f72fe5de815e2ec5814895f38ec5a428a7fa2a937edff'

airtable = Airtable(base_id, table_id, personal_access_token)

records = airtable.get_all()
for record in records:
    print(record)

data = [record['fields'] for record in records]


df = pd.DataFrame(data)


df.to_excel('2_Часть.xlsx', index=False)

from airtable import Airtable

base_id = 'appx3BTpqW1UAIzDz'
table_id = 'tblC186rO1LJqs6gf'
personal_access_token = 'patEPV6wnalYglZx0.b49e81cb57ad7117480f72fe5de815e2ec5814895f38ec5a428a7fa2a937edff'

airtable = Airtable(base_id, table_id, personal_access_token)

records = airtable.get_all()
for record in records:
    print(record)

data = [record['fields'] for record in records]


df = pd.DataFrame(data)


df.to_excel('3_Часть.xlsx', index=False)

from airtable import Airtable

base_id = 'appx3BTpqW1UAIzDz'
table_id = 'tblaboX3OsKDpLYa0'
personal_access_token = 'patEPV6wnalYglZx0.b49e81cb57ad7117480f72fe5de815e2ec5814895f38ec5a428a7fa2a937edff'

airtable = Airtable(base_id, table_id, personal_access_token)

records = airtable.get_all()
for record in records:
    print(record)

data = [record['fields'] for record in records]


df = pd.DataFrame(data)


df.to_excel('4_Часть.xlsx', index=False)

import pandas as pd

# Загрузка данных из файла Excel
df = pd.read_excel('4_Часть.xlsx')

# Поиск повторяющихся данных во всех столбцах
duplicates_all = df[df.duplicated()]

# Поиск повторяющихся данных только в определенных столбцах
columns_to_check = ['ФИО Студента']  # Укажите столбцы, в которых нужно искать повторы
duplicates_selected_columns = df[df.duplicated(subset=columns_to_check)]

print("Повторяющиеся данные в выбранных столбцах:")
print(duplicates_selected_columns)

import pandas as pd

df1 = pd.read_excel('1_Часть.xlsx')

df2 = pd.read_excel('2_Часть.xlsx')

df3 = pd.read_excel('3_Часть.xlsx')

df4 = pd.read_excel('4_Часть.xlsx')

# Конкатенация таблиц по вертикали
merged_df = pd.merge(df1, df2, how='outer')
merged_df = pd.merge(merged_df, df3, how='outer')
merged_df = pd.merge(merged_df, df4, how='outer')

# Сохранение объединенной таблицы в новый файл Excel
merged_df.to_excel('Все.xlsx', index=False)

# Чтение данных из CSV файла
import pandas as pd

df = pd.read_excel('Все.xlsx')
df